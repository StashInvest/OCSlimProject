<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Swift</key>
	<dict>
		<key>Nodes</key>
		<array/>
		<key>Definitions</key>
		<dict>
			<key>___PACKAGENAMEASIDENTIFIER___.swift</key>
			<dict>
				<key>Path</key>
				<string>___PACKAGENAMEASIDENTIFIER___.swift</string>
			</dict>
		</dict>
	</dict>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.applicationBase</string>
	</array>
	<key>Identifier</key>
	<string>io.cleankit.baseAcceptanceTests</string>
	<key>Concrete</key>
	<false/>
	<key>TargetOnly</key>
	<true/>
	<key>Targets</key>
	<array>
		<dict>
			<key>ProductType</key>
			<string>com.apple.product-type.application</string>
			<key>SharedSettings</key>
			<dict>
				<key>LD_RUNPATH_SEARCH_PATHS</key>
				<string>$(inherited) @executable_path/../Frameworks</string>
				<key>SWIFT_OBJC_BRIDGING_HEADER</key>
				<string>___PACKAGENAMEASIDENTIFIER___/___PACKAGENAMEASIDENTIFIER___-Bridging-Header.h</string>
			</dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>ShellScript</string>
					<key>ShellPath</key>
					<string>/bin/sh</string>
					<key>ShellScript</key>
					<string># Validate Project Build Settings
if [ -z &quot;${OCSLIMPROJECT_BUNDLE_RESOURCES_DIR}&quot; ]; then
   echo &quot;Missing expected OCSlimProject build settings. Running &apos;$ pod update&apos; may fix this problem&quot;
   exit 1
fi

# Export Build Environment to Bundle Location
ENV_TARGET=${OCSLIMPROJECT_BUNDLE_RESOURCES_DIR}/env.sh

function exportTestRunnerEnv {
    mkdir -p &quot;$(dirname &quot;$ENV_TARGET&quot;)&quot; &amp;&amp; touch &quot;$ENV_TARGET&quot;
    export | egrep &apos;(INSTALL_DIR)|(PRODUCT_NAME)|(TARGET_BUILD_DIR)|(EXECUTABLE_FOLDER_PATH)|(DEPLOYMENT_TARGET_SUGGESTED_VALUES)|(EXECUTABLE_PATH)&apos; &gt; $ENV_TARGET
}

# Write Test Runner Script To Project Root
TESTRUNNER_SOURCE=${OCSLIMPROJECT_BUNDLE_RESOURCES_DIR}/RunTestsTargetWithSlimPort
TESTRUNNER_TARGET=${PROJECT_DIR}/OCSlimProjectTestRunner.sh

function writeTestRunnerScript {
    
    if [ -f &quot;$TESTRUNNER_TARGET&quot; ]; then
        rm $TESTRUNNER_TARGET
    fi
    
    echo &apos;#!/bin/sh&apos; &gt; $TESTRUNNER_TARGET
    echo $TESTRUNNER_SOURCE &apos;$1&apos; &gt;&gt; $TESTRUNNER_TARGET
    chmod +x $TESTRUNNER_TARGET
    
}

# Symbolic Link LaunchFitnesse to Project Root
LAUNCHFITNESSE_SCRIPTNAME=LaunchFitnesse
LAUNCHFITNESSE_SOURCE=${OCSLIMPROJECT_BUNDLE_RESOURCES_DIR}/$LAUNCHFITNESSE_SCRIPTNAME
LAUNCHFITNESSE_TARGET=${PROJECT_DIR}/$LAUNCHFITNESSE_SCRIPTNAME

function linkFitnesseScript {
    
    if [ -L $LAUNCHFITNESSE_TARGET ]; then
        unlink $LAUNCHFITNESSE_TARGET
    fi
    
    ln -s $LAUNCHFITNESSE_SOURCE $(dirname &quot;$LAUNCHFITNESSE_TARGET&quot;)
}


###

exportTestRunnerEnv
writeTestRunnerScript
linkFitnesseScript</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>Nodes</key>
	<array>
		<string>___PACKAGENAMEASIDENTIFIER___-Bridging-Header.h</string>
		<string>___PACKAGENAMEASIDENTIFIER___.m</string>
		<string>FixtureExample.swift</string>
		<string>SlimTables.h</string>
		<string>Info.plist:PackageType</string>
	</array>
	<key>Definitions</key>
	<dict>
		<key>___PACKAGENAMEASIDENTIFIER___-Bridging-Header.h</key>
		<dict>
			<key>Path</key>
			<string>___PACKAGENAMEASIDENTIFIER___-Bridging-Header.h</string>
			<key>Group</key>
			<string>Supporting Files</string>
			<key>SortOrder</key>
			<integer>100</integer>
		</dict>
		<key>___PACKAGENAMEASIDENTIFIER___.m</key>
		<dict>
			<key>Path</key>
			<string>___PACKAGENAMEASIDENTIFIER___.m</string>
			<key>Group</key>
			<string>Supporting Files</string>
		</dict>
		<key>FixtureExample.swift</key>
		<dict>
			<key>Path</key>
			<string>FixtureExample.swift</string>
			<key>Group</key>
			<string>Fixtures</string>
		</dict>
		<key>SlimTables.h</key>
		<dict>
			<key>Path</key>
			<string>SlimTables.h</string>
			<key>Group</key>
			<string>Supporting Files</string>
		</dict>
		<key>Info.plist:PackageType</key>
		<string>&lt;key&gt;CFBundlePackageType&lt;/key&gt;
&lt;string&gt;APPL&lt;/string&gt;
</string>
	</dict>
</dict>
</plist>
