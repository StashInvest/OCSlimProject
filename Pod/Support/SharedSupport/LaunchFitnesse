##############
# PROPERTIES #
##############

MY_PATH=$(dirname $0)
BUNDLE_DIR=$(dirname "$(readlink "${BASH_SOURCE[0]}")")
ACTION=LAUNCH
CURL_CONNECTION_REFUSED_CODE=7

#################
# CONFIGURATION #
#################

FITNESSE_PORT=8080
FITNESSE_EXECUTABLE_PATH=${BUNDLE_DIR}/fitnesse-standalone.jar
FITNESSE_ROOT_CONTENT_FILE=FitnesseRoot/content.txt
FITNESSE_URL=http:"//localhost:${FITNESSE_PORT}/"
FITNESSE_TEST_OUTPUT=${PROJECT_DIR}/Fitnesse-Test-Report.xml
FITNESSE_ROOT=.
FITNESSE_TEST_SUITE=

####################################
# Command Line Argument Processing #
####################################

while [ "$1" != "" ]; do

    case $1 in
	
		-p | --port )			shift
								FITNESSE_PORT=$1
                                ;;
								
		-d | --RootPath )		shift
								FITNESSE_ROOT=$1
								;;
								
		-x | --shutdown)		ACTION=SHUTDOWN
                                ;;
                                
        -b | --output)			shift
        						FITNESSE_TEST_OUTPUT=$1
        						;;
        						
        -t | --test )           shift
        						FITNESSE_TEST_SUITE=$1
        						ACTION=TEST
								;;
								
		esac
		shift
done

###############
# Subroutines #
###############

function java_check {
	if ! type java &> /dev/null ;  then
		echo "Java (JRE) not found"
    	echo "Download the latest version of Java?"
		select yn in "Get Java for Mac" "Not Now"; do
			case $yn in 
				"Get Java for Mac" ) open "http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html"; break;;
				"Not Now" ) break;;
			esac
		done
		exit 0
	fi
}

function fitnesse_shutdown {
	echo "[OSCP_CTL] FITNESSE: Shutdown"
	curl --silent $FITNESSE_URL?shutdown > /dev/null
	lsof -n -i4TCP:$FITNESSE_PORT | awk ' { print $2 }' | sed -n 2p | xargs kill -9
}

function fitnesse_check {

	if [ ! -f "${FITNESSE_EXECUTABLE_PATH}" ]; then
		echo "Fitnesse-Standalone.jar missing!"
    	echo "Download the latest fitnesse-standlalone.jar to the current directory from Fitnesse.org"
		select yn in "Goto http://fitnesse.org" "Not Now"; do
			case $yn in 
				"Goto http://fitnesse.org" ) open "http://fitnesse.org"; break;;
				"Not Now" ) break;;
			esac
		done
		popd 2>&1 > /dev/null
		exit 0
	fi

}

function fitnesse_start {
	echo "[OCSP_CTL] action=${ACTION}"
	echo "[OCSP_CTL] Jar=${FITNESSE_EXECUTABLE_PATH}"
	echo "[OCSP_CTL] Port=${FITNESSE_PORT}"
	echo "[OCSP_CTL] RootPath=${FITNESSE_ROOT}"
	echo "[OCSP_CTL] FITNESSE: Launch"
	java -jar ${FITNESSE_EXECUTABLE_PATH} -e 0 -p ${FITNESSE_PORT} -d ${FITNESSE_ROOT} &
}

function fitnesse_wait {
	echo "[OCSP_CTL] FITNESSE: Waiting for Fitnesse..."
	result=$CURL_CONNECTION_REFUSED_CODE
	while [ $result -eq $CURL_CONNECTION_REFUSED_CODE ] 
	do
		sleep 0.5
		curl -s "http://localhost:${FITNESSE_PORT}" > /dev/null 2>&1 
		result=$?
	done
	echo "[OCSP_CTL] Fitnesse: Ready"
}

function fitnesse_setup {
	if [ ! -f "${FITNESSE_ROOT_CONTENT_FILE}" ]; then
		echo "''Auto Generated By !-"OCSlimProject"-! Do Not Modify This Page''" > $FITNESSE_ROOT_CONTENT_FILE
		echo "!define TEST_SYSTEM {slim}" >> $FITNESSE_ROOT_CONTENT_FILE
		echo "!define TEST_RUNNER {!-./OCSlimProjectTestRunner.sh-!}" >> $FITNESSE_ROOT_CONTENT_FILE
		echo "!define SLIM_VERSION {0.0}" >> $FITNESSE_ROOT_CONTENT_FILE
		echo "!define COMMAND_PATTERN {%m}" >> $FITNESSE_ROOT_CONTENT_FILE
		
		cp -r 
	fi
}


function fitnesse_main {

	pushd $MY_PATH 2>&1 > /dev/null
	
	
	# Check Java Exists	
	java_check
	
	# Check Fitnesse Exists
	fitnesse_check	
	
	# Enable Job Control
	set -o monitor
	
	# LAUNCH Fitnesse in the background, wait for it to respond, then open in a browser.
	fitnesse_run
	
	popd 2>&1 > /dev/null
	
}

function fitnesse_run {
	fitnesse_start
	fitnesse_wait
	fitnesse_setup
}

function fitnesse_launch_in_browser {
	fitnesse_main
	open $FITNESSE_URL
}

function fitnesse_generate_test_suite_report {
	fitnesse_main
	fitnesse_write_suite_results
}

function fitnesse_write_suite_results {
	echo "[OCSP_CTL] Run Test Action"
	echo "[OCSP_CTL] Test Suite=$FITNESSE_TEST_SUITE"
	echo "[OCSP_CTL] Test Output=$FITNESSE_TEST_OUTPUT"
	echo "[OCSP_CTL] FITNESSE: Run Tests..."
	cmd=$FITNESSE_URL$FITNESSE_TEST_SUITE\?suite\&format\=junit 
	curl $cmd -s > $FITNESSE_TEST_OUTPUT
	echo "[OCSP_CTL] Testing Report Generated (curl exit code=$?)"
}

########
# Main #
########

function main {

	case "$ACTION" in

	LAUNCH) 
		fitnesse_launch_in_browser
		echo  "[OCSP_CTL] Use --shutdown to stop Fitnesse"
		;;
		
	SHUTDOWN)  
		echo "[OCSP_CTL] Shutting Down Fitnesse on Port $FITNESSE_PORT"
		fitnesse_shutdown
		;;
		
	TEST)  
		fitnesse_generate_test_suite_report
		fitnesse_shutdown
		;;
		
	esac
	
}

main
